diff --git a/app/i18n/translations.js b/app/i18n/translations.js
index 52fa45e..9fe509a 100644
--- a/app/i18n/translations.js
+++ b/app/i18n/translations.js
@@ -1920,7 +1920,7 @@ module.exports = {
 		"zh": "上传此图片即表示您同意放弃您的版权，并将图片放置在{license}下的公共领域。",
 		"el": "Με τη μεταφόρτωση αυτής της εικόνας  συμφωνείς και παραιτείσαι από τα δικαιώματα πνευματικής ιδιοκτησίας και τοποθετείς την εικόνα αυτή στον δημόσιο τομέα υπό την {license}.",
 		"hi": "इस छवि को अपलोड करके आप अपने कॉपीराइट को छोड़ने और सार्वजनिक डोमेन में छवि को स्थान देने के लिए सहमत हैं। ({license})",
-		"fr": "Par l'envoi de cette image, tu confirmes que tu renonces à ces droits d'auteurs et que tu places cette image dans le domaine publique sous la {licence}",
+		"fr": "Par l'envoi de cette image, tu confirmes que tu renonces à ces droits d'auteurs et que tu places cette image dans le domaine publique sous la {license}",
 		"it": "Caricando questa immagine sei d'accordo con le regole di copyright e di mettere l'immagine a disposizione del pubblico sotto la {license}."
 	},
 	"license": {
diff --git a/app/redux/actions/main/main.js b/app/redux/actions/main/main.js
index bfe0886..408bc37 100644
--- a/app/redux/actions/main/main.js
+++ b/app/redux/actions/main/main.js
@@ -370,6 +370,7 @@ export const validateFile = ( e ) => {
 
 				dispatch( resetMain() )
 
+				// const msg = typeof error === 'object' ? JSON.stringify( error ) : error
 				let msg = error.message ? error.message : 'an_error_occurred'
 				dispatch( { type: types.SET_ERROR_MSG, to: msg } )
 				dispatch( { type: types.SET_LAYER_VISIBILITY, layer: 'errors', to: true } )
@@ -519,6 +520,7 @@ export const uploadImage = ( ) => {
 				formData.append( 'labels', JSON.stringify( devLabels ) )
 				formData.append( 'material', material )
 				formData.append( 'comment', comment )
+				formData.append( 'source', 'webapp' )
 				//formData.append( 'adaptation', adaptation )
 				//formData.append( 'hashtag', hashtag )
 
diff --git a/app/redux/actions/main/mapbox.js b/app/redux/actions/main/mapbox.js
index 08b3720..45c0320 100644
--- a/app/redux/actions/main/mapbox.js
+++ b/app/redux/actions/main/mapbox.js
@@ -79,7 +79,6 @@ export const displayMap = ( ) => {
 		dispatch( { type: types.SET_LAYER_VISIBILITY, layer: 'upload', to: false } )
 		dispatch( { type: types.SET_LAYER_VISIBILITY, layer: 'prompts', to: false } )
 
-
 		promiseInitMapbox( ACCESSTOKEN, OPTIONS )
 			.then( ( map ) => {
 
@@ -89,7 +88,7 @@ export const displayMap = ( ) => {
 				map.addControl( mapboxAttributionControl(), 'bottom-left' );
 		
 
-				//map.addControl( mapboxGeocoder( { accessToken: ACCESSTOKEN/*, placeholder: "sdfg"*/ } ), 'top-left' )
+				//map.addControl( mapboxGeocoder( { accessToken: ACCESSTOKEN, placeholder: "sdfg" } ), 'top-left' )
 				map.addControl( mapboxNavigationControl(), 'bottom-right' )
 
 				const popup = mapboxPopup( { closeButton: false, closeOnClick: false, anchor: 'bottom', maxWidth: 'auto' } )
@@ -344,7 +343,7 @@ export const displayMap = ( ) => {
 			} )	*/		
 			.catch( ( error ) => {
 
-				//const alt = typeof error === 'object' ? JSON.stringify( alt ) : alt
+				// const msg = typeof error === 'object' ? JSON.stringify( error ) : error
 				let msg = error.message ? error.message : 'an_error_occurred'
 				dispatch( { type: types.SET_ERROR_MSG, to: msg } )
 
diff --git a/app/redux/components/main/errors.jsx b/app/redux/components/main/errors.jsx
index 68ba383..2a19ab1 100644
--- a/app/redux/components/main/errors.jsx
+++ b/app/redux/components/main/errors.jsx
@@ -123,7 +123,7 @@ const errors = ( { intl, className, jazzSupported, show, error, upload } ) => {
 		return (
 
 			<DIV id="Errors" className={ clsJazz } >
-				<H priority={ 2 }>{ str }</H>
+				<H priority={ 2 } style={ { wordBreak: 'break-all' } }>{ str }</H>
 				{ upload && <ACTIONS /> }
 			</DIV>
 
diff --git a/app/redux/components/main/popup.jsx b/app/redux/components/main/popup.jsx
index 39561db..392afad 100644
--- a/app/redux/components/main/popup.jsx
+++ b/app/redux/components/main/popup.jsx
@@ -141,7 +141,11 @@ class popup extends Component {
 			//const url = contribution_source == 'webapp' ? "uploads/" + contribution_uid + ".jpg" : "http://geolittoral.application.developpement-durable.gouv.fr/telechargement/tc_smartphone/photos/" + contribution_uid + ".jpg"
 			const url = contribution_reported == '1' ? "assets/reported.jpg" : "uploads/" + contribution_uid + ".jpg"
 			
+
+			
+
 			const usercomment = unescape( contribution_comment )
+			
 			const hascomment = usercomment != '' || contribution_source == 'rivages'
 			const showcomment = commentToggled && hascomment
 			const commentIcon = showcomment ? 'insert_comment' : 'mode_comment'
@@ -174,8 +178,9 @@ class popup extends Component {
 					</DIV> }
 					<DIV className={ clsTop } style={ { backgroundImage: 'url("' + url +'")' } } >
 						{ showcomment && <DIV className={ style.comment } >
+							{ contribution_source !== 'rivages' && <P>{ usercomment }</P> }
+							
 							{ contribution_source == 'rivages' && <H priority={ 1 } >Rivages</H> }
-							{ contribution_source == 'webapp' && <P>{ usercomment }</P> }
 							{ contribution_source == 'rivages' && 
 								<P>This image was uploaded in collaboration with "Rivages", a Citizen Science project developed by Cerema. The goal of "Rivages" is to monitor changes of shorelines by asking participants to trace them with their mobile phones.
 									<BR/><BR/>
diff --git a/package-lock.json b/package-lock.json
index 83c6acd..30d4342 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -5017,8 +5017,7 @@
         },
         "ansi-regex": {
           "version": "2.1.1",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         },
         "aproba": {
           "version": "1.2.0",
@@ -5036,13 +5035,11 @@
         },
         "balanced-match": {
           "version": "1.0.0",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         },
         "brace-expansion": {
           "version": "1.1.11",
           "bundled": true,
-          "optional": true,
           "requires": {
             "balanced-match": "^1.0.0",
             "concat-map": "0.0.1"
@@ -5055,18 +5052,15 @@
         },
         "code-point-at": {
           "version": "1.1.0",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         },
         "concat-map": {
           "version": "0.0.1",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         },
         "console-control-strings": {
           "version": "1.1.0",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         },
         "core-util-is": {
           "version": "1.0.2",
@@ -5169,8 +5163,7 @@
         },
         "inherits": {
           "version": "2.0.3",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         },
         "ini": {
           "version": "1.3.5",
@@ -5180,7 +5173,6 @@
         "is-fullwidth-code-point": {
           "version": "1.0.0",
           "bundled": true,
-          "optional": true,
           "requires": {
             "number-is-nan": "^1.0.0"
           }
@@ -5193,20 +5185,17 @@
         "minimatch": {
           "version": "3.0.4",
           "bundled": true,
-          "optional": true,
           "requires": {
             "brace-expansion": "^1.1.7"
           }
         },
         "minimist": {
           "version": "0.0.8",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         },
         "minipass": {
           "version": "2.3.5",
           "bundled": true,
-          "optional": true,
           "requires": {
             "safe-buffer": "^5.1.2",
             "yallist": "^3.0.0"
@@ -5223,7 +5212,6 @@
         "mkdirp": {
           "version": "0.5.1",
           "bundled": true,
-          "optional": true,
           "requires": {
             "minimist": "0.0.8"
           }
@@ -5296,8 +5284,7 @@
         },
         "number-is-nan": {
           "version": "1.0.1",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         },
         "object-assign": {
           "version": "4.1.1",
@@ -5307,7 +5294,6 @@
         "once": {
           "version": "1.4.0",
           "bundled": true,
-          "optional": true,
           "requires": {
             "wrappy": "1"
           }
@@ -5383,8 +5369,7 @@
         },
         "safe-buffer": {
           "version": "5.1.2",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         },
         "safer-buffer": {
           "version": "2.1.2",
@@ -5414,7 +5399,6 @@
         "string-width": {
           "version": "1.0.2",
           "bundled": true,
-          "optional": true,
           "requires": {
             "code-point-at": "^1.0.0",
             "is-fullwidth-code-point": "^1.0.0",
@@ -5432,7 +5416,6 @@
         "strip-ansi": {
           "version": "3.0.1",
           "bundled": true,
-          "optional": true,
           "requires": {
             "ansi-regex": "^2.0.0"
           }
@@ -5471,13 +5454,11 @@
         },
         "wrappy": {
           "version": "1.0.2",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         },
         "yallist": {
           "version": "3.0.3",
-          "bundled": true,
-          "optional": true
+          "bundled": true
         }
       }
     },
diff --git a/server/contribute.js b/server/contribute.js
index 71aea91..58b9614 100644
--- a/server/contribute.js
+++ b/server/contribute.js
@@ -2,6 +2,7 @@ const express = require( 'express' )
 const router = express.Router()
 const mysql = require( 'mysql' )
 const formidable = require( 'formidable' )
+const fetch = require( 'node-fetch' ) 
 //const query_overpass = require( 'query-overpass' )
 // For node 7+
 var os = require( 'os' ); 
@@ -30,18 +31,20 @@ const pool  = mysql.createPool( {
 
 } )
 
+const UPLOADDIR = path.join( __dirname, '../public/uploads' )
+
 const _promiseFetchForm = ( req ) => {
 
 	var form = new formidable.IncomingForm()
-	var uploadDir = path.join( __dirname, '../public/uploads' )
+	// var uploadDir = path.join( __dirname, '../public/uploads' )
 
-	if ( !fs.existsSync( uploadDir ) ){
+	if ( !fs.existsSync( UPLOADDIR ) ){
 
-		fs.mkdirSync( uploadDir )
+		fs.mkdirSync( UPLOADDIR )
 
 	}
 
-	form.uploadDir = uploadDir;
+	form.uploadDir = UPLOADDIR;
 	form.keepExtensions = true;
 
 	return new Promise( ( resolve, reject ) => {
@@ -50,6 +53,8 @@ const _promiseFetchForm = ( req ) => {
 
 		form.parse( req, function ( error, fields, files ) {
 
+			
+
 			if( error ){
 
 				reject( Error( 'contributions/promiseFetchForm/parse(error)/' + error ) )
@@ -164,12 +169,95 @@ const _promiseValidDate = ( formData ) => {
 
 }
 
+const _promiseLabels = ( formData ) => {
+
+	return new Promise( ( resolve, reject ) => {
+
+		const { fields, files } = formData
+		const { labels } = fields
+
+
+		if( labels ){
+
+			formData.labels = labels
+			resolve( formData )
+
+		}else{
+
+
+			const data = JSON.stringify( {
+
+				"requests":[
+					{
+						"image": { "source": {
+
+							// imageUri: files.file.path'
+							imageUri: 'http://coastwards.org/uploads/61688e90-cbed-11e8-a630-7d60b7289fc1.jpg'
+
+						} },
+						"features":[
+							{
+								"type":"LABEL_DETECTION"
+							},
+							{
+								"type":"SAFE_SEARCH_DETECTION"
+							}
+
+						]
+					}
+				]
+			} )
+
+			fetch( 'https://vision.googleapis.com/v1/images:annotate?fields=responses&key=' + process.env.GOOGLE_API_KEY_SERVER, {
+
+				method: 'POST',
+				body: data,
+
+			} )
+				.then( ( response ) => response.json() )
+				.then( ( responseJson ) => {
+
+					if ( responseJson.responses ) {
+
+						const annotations = responseJson.responses[ 0 ]
+
+						if( _.contains( annotations.safeSearchAnnotation, 'LIKELY' ) || _.contains( annotations.safeSearchAnnotation, 'VERY_LIKELY' ) ){
+						
+							reject( 'spam_detected' )
+
+						}
+
+						formData.labels = JSON.stringify( annotations.labelAnnotations )
+						resolve( formData )
+						return formData
+
+					} else {
+
+						reject( responseJson.error.message ) 
+
+						return formData
+
+					}
+
+				} )
+				.catch( ( error ) => {
+
+					reject( error ) 
+
+				} )
+
+		}
+
+	} )
+
+}
+
 const _promiseInsertContribution = ( formData ) => {
 
 	return new Promise( function ( resolve, reject ) {
 
-		const { ip, fields, validDate } = formData
-		const { long, lat, manual, corrected, uid, labels, exifdata, material, adaptation, comment, hashtag } = fields
+		const { ip, fields, validDate, labels } = formData
+		const { long, lat, manual, corrected, uid, exifdata, material, source, adaptation, comment, hashtag } = fields
 		const point = util.format( 'POINT(%s %s)', long, lat )
 
 		const sanitizedComment = xss( comment )
@@ -180,7 +268,7 @@ const _promiseInsertContribution = ( formData ) => {
 
 		// Truncate table coastwards.contributions
 		//(INET6_ATON(?))
-		var sql = 'INSERT INTO ??.?? ( ??, ??, ??, ??, ??, ??, ??, ??, ??, ??, ??, ?? ) VALUES ( (ST_PointFromText(?)), ?, ?, ?, ?, ?,(INET6_ATON(?)) , ?, ?, ?, ?, ? )'
+		var sql = 'INSERT INTO ??.?? ( ??, ??, ??, ??, ??, ??, ??, ??, ??, ??, ??, ??, ?? ) VALUES ( (ST_PointFromText(?)), ?, ?, ?, ?, ?,(INET6_ATON(?)), ? , ?, ?, ?, ?, ? )'
 		//var sql = 'INSERT INTO ??.?? ( ??, ??, ??, ??, ??, ??, ??, ??, ??, ??, ?? ) VALUES ( (ST_PointFromText(?)), ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )'
 		var inserts = [ 
 			'coastwards', 
@@ -196,6 +284,7 @@ const _promiseInsertContribution = ( formData ) => {
 			'contribution_exif',
 			'contribution_ip',
 			'contribution_material',
+			'contribution_source',
 
 			'contribution_exif_datetime',
 			'contribution_adaptation',
@@ -210,6 +299,7 @@ const _promiseInsertContribution = ( formData ) => {
 			exifdata,
 			ip,
 			material,
+			source,
 
 
 			//CAREFULL!!!!
@@ -259,6 +349,7 @@ router.post( '/upload', ( req, res ) => {
 
 	_promiseFetchForm( req )
 		.then( _promiseValidDate )
+		.then( _promiseLabels )
 		.then( _promiseInsertContribution )
 		.then( ( formData ) => {
 
